1、C++中函数可以将数组名作为参数，但不可以返回数组。
2、传递常规变量，函数将使用该变量的拷贝。但传递数组时，函数将使用原来的数组（其实调用的是数组指针，即地址）。将数组地址作为参数可以节省复制整个数组所需的时间和内存。
3、数组指针本身并没有指出数组的长度
4、注意：如果数据类型本身并不是指针，则可以将const数据或者非const数据的地址赋给指向const的指针，但只能将非const数据的地址赋给非const指针。
5、函数原型：P170
①为什么需要原型？
原型描述了编译器的接口，包含返回值类型、参数的类型及数量。首先，原型可以让编译器捕捉函数定义的参数错误（类型、数量）；其次，原型指出了函数的类型（返回值），因此编译器知道应检索多少字节以及如何解释它们，否则编译器只能靠猜，但编译器并不会这样做。
②原型的语法。
函数原型并不要求提供变量名，有类型列表就行了，即使写上变量名，名称也可与函数定义中的变量名相同。
③原型的功能：极大地降低程序出错地几率。
原型确保编译器能够正确处理函数返回值；编译器检查使用的参数数目以及类型是否正确。

