2.1 进入C++
1、main()函数：C++语法要求main()函数的定义以函数头int main()开始，若main()没有写返回语句，默认return 0。main()函数的返回值并不是返回给程序其他部分，而是返回给操作系统。
2、C++预处理：在使用主编译之前对源文件进行处理。比如#include <iostream>编译指令导致iostream文件的内容随源代码文件的内容一起被发送给编译器。实际上，iostream文件的内容将取代陈序中的代码行#include <iostream>（原始文件没有被修改。
3、头文件名：老式C的头文件保留了扩展名，如math.h（C++仍然可以使用），而C++头文件则没有扩展名，还有一些C头文件被转换成了C++头文件如math.h 到cmath。
4、名称空间：方便不同库中同名函数的调用。位置：①放在函数定义之前，让文件中所有的函数都能够使用名称空间中所有的元素。②放在特定的函数中。③在特定的函数中使用类似using std::cout;这样的编译指令，让函数能够使用指定的元素。④不使用using，而是在要使用时，加上前缀，如std::cout。
5、声明：要将信息存储在计算机中，必须指出信息的存储位置和所需的内存空间，如 int  x（仅是声明，并没有初始化）。定义声明（导致编译器为变量声明空间），引用声明（使用在其他地方定义的变量）。对于声明变量，C++的做法是尽可能在首次使用前声明它。
6、类简介：类是用户定义的一种数据类型，包含数据、对数据可执行的操作。
7、函数原型：函数原型之于函数就像变量声明之于变量——指出涉及的类型，只是描述函数的接口。两种实现方法：①在源代码文件中输入函数原型。②包含头文件，其中定义了原型（该方法更好，因为头文件更有可能使原型正确）。库文件中包含了函数的编译代码，头文件中包含了原型。应在首次使用函数之前提供其原型，如包含头文件。
8、自定义函数：C++不允许将函数定义嵌套在另一个函数定义中。每个函数定义都是独立的，所有函数的创建都是平等的。
